{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "API document",
    "description": "A sample API that uses for Users and Posts"
  },
  "servers": [
    {
      "url": "http://localhost:3000/", 
      "description": "Local server"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "USER"
        ],
        "summary": "Listing all resources",
        "description": "Returns all users",
        "operationId": "allUsers",
        "responses": {
          "200": {
            "description": "user response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "USER"
        ],
        "summary": "Creating a resource",
        "description": "Creates a new user",
        "operationId": "createUser",
        "security": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; version=1.0"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Creates a new user (email have to be unique)",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/NewUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "USER"
        ],
        "summary": "Getting a resource",
        "description": "Returns a user based on a single ID",
        "operationId": "getUserByID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to fetch",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "USER"
        ],
        "summary": "Deleting a resource",
        "description": "deletes a single user based on the ID",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResource"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "USER"
        ],
        "summary": "Updating a resource",
        "description": "update a single user based on the ID ",
        "operationId": "updateUser",
        "security": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; version=1.0"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "update a single user based on the ID (email have to be unique)",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/NewUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "USER"
        ],
        "summary": "Patching a resource",
        "description": "update a single user based on the ID ",
        "operationId": "patchUser",
        "security": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; version=1.0"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "patch a single user based on the ID (email have to be unique)",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/NewUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/usersFilter": {
      "get": {
        "tags": [
          "USER"
        ],
        "summary": "Filtering resources",
        "description": "Get users by id, name, username, email, phone, website(optional)",
        "operationId": "getProductName",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "website",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/posts": {
      "get": {
        "tags": [
          "POST"
        ],
        "summary": "Listing all resources",
        "description": "Returns all posts from the system that the user has access to",
        "operationId": "findposts",
        "responses": {
          "200": {
            "description": "posts response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/post": {
      "post": {
        "tags": [
          "POST"
        ],
        "summary": "Creating a resource",
        "description": "Creates a new posts in the store.  Duplicates are not allowed",
        "operationId": "createPost",
        "security": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; version=1.0"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Creates a new user",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/NewPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "post response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/post/{id}": {
      "get": {
        "tags": [
          "POST"
        ],
        "summary": "Getting a resource",
        "description": "Returns a post based on a single ID",
        "operationId": "getPostByID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of post to fetch",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "post response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "POST"
        ],
        "summary": "Deleting a resource",
        "description": "deletes a single post based on the ID ",
        "operationId": "deletepost",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of post to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "post deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResource"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "POST"
        ],
        "summary": "Updating a resource",
        "description": "update a single post based on the ID ",
        "operationId": "updatePost",
        "security": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; version=1.0"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "update a single post based on the ID ",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/NewPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "post response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "POST"
        ],
        "summary": "Patching a resource",
        "description": "update a single post based on the ID ",
        "operationId": "patchPost",
        "security": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json; version=1.0"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "patch a single post based on the ID",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/NewPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "post response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/postsFilter": {
      "get": {
        "tags": [
          "POST"
        ],
        "summary": "Filtering resources",
        "description": "Get Products by userId, id(optional)",
        "operationId": "getProductName",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "The userId that needs to be fetched",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The Product locale needs to be fetched. Example=en-GB, fr-FR, etc.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "post response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/:id/posts": {
      "get": {
        "tags": [
          "Listing Nested"
        ],
        "summary": "Listing nested resource",
        "description": "Returns a resource based on a ID",
        "operationId": "listingNested",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID resource fetch",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Geo": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "string"
          },
          "lng": {
            "type": "string"
          }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string"
          },
          "suite": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zipcode": {
            "type": "string"
          },
          "geo": {
            "$ref": "#/components/schemas/Geo"
          }
        }
      },
      "Company": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "catchPhrase": {
            "type": "string"
          },
          "bs": {
            "type": "string"
          }
        }
      },
      "User": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NewUser"
          },
          {
            "type": "object",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "NewUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "uniqueItems": true
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "phone": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          }
        }
      },
      "Post": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NewPost"
          },
          {
            "type": "object",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "NewPost": {
        "type": "object",
        "required": [
          "userId"
        ],
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          }
        }
      },
      "DeleteResource": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      }
    }
  }
}